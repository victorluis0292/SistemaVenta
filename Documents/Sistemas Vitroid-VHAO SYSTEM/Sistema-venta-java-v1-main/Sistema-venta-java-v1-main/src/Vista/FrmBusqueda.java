/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Modelo.Conexion;
import Modelo.Productos;
import Modelo.ProductosDao;
import static Vista.Sistema.TableProducto;
import static Vista.Sistema.TableVenta;
import static Vista.Sistema.jTabbedPane1;
import static Vista.Sistema.lblEnviaTotal;
import static Vista.Sistema.modelo3;
import static Vista.Sistema.modelo4;
import static Vista.Sistema.txtCodigoPro;
import static Vista.Sistema.txtCodigoVenta;
import static Vista.Sistema.txtNombreClienteventaCredit;
import static Vista.Sistema.txtRucVentaCredit;
import java.awt.KeyEventPostProcessor;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import java.net.URL;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import static java.util.jar.Pack200.Packer.PASS;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.Timer;


/**
 *
 * @author vic
 */
public class FrmBusqueda extends javax.swing.JFrame {
   private Timer timer;
        Connection con;
    Conexion cn = new Conexion();
    PreparedStatement ps;
    ResultSet rs;
    DefaultTableModel modelo = new DefaultTableModel(); 

  //TableRowSorter<DefaultTableModel>sorter;
  
   Productos pro = new Productos();
    ProductosDao proDao = new ProductosDao();
     String mayus;
      double TotalPagar = 0.00;
    /**
     * Creates new form FrmBusqueda
     */
    public FrmBusqueda() {
        initComponents();
          //ListarProductos4();
        
           txtBuscar.requestFocus();
          this.setLocationRelativeTo(null);
           txtCantidadVenta.setVisible(false);
           jLabel5.setVisible(false);
           txtcodigo.setVisible(false);         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane8 = new javax.swing.JScrollPane();
        TableProductoJF = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        txtCantidadVenta = new javax.swing.JTextField();
        txtBuscar = new javax.swing.JTextField();
        jLabel52 = new javax.swing.JLabel();
        txtcodigo = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("formKeyReleased"); // NOI18N
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        TableProductoJF.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        TableProductoJF.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "CODIGO", "DESCRIPCIÃ“N", "CANTIDAD", "PRECIO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableProductoJF.setRowHeight(25);
        TableProductoJF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableProductoJFMouseClicked(evt);
            }
        });
        TableProductoJF.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                TableProductoJFCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        TableProductoJF.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                TableProductoJFPropertyChange(evt);
            }
        });
        TableProductoJF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TableProductoJFKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TableProductoJFKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TableProductoJFKeyTyped(evt);
            }
        });
        jScrollPane8.setViewportView(TableProductoJF);
        if (TableProductoJF.getColumnModel().getColumnCount() > 0) {
            TableProductoJF.getColumnModel().getColumn(0).setMinWidth(10);
            TableProductoJF.getColumnModel().getColumn(0).setPreferredWidth(50);
            TableProductoJF.getColumnModel().getColumn(0).setMaxWidth(50);
            TableProductoJF.getColumnModel().getColumn(1).setMinWidth(50);
            TableProductoJF.getColumnModel().getColumn(1).setPreferredWidth(100);
            TableProductoJF.getColumnModel().getColumn(1).setMaxWidth(60);
            TableProductoJF.getColumnModel().getColumn(2).setResizable(false);
            TableProductoJF.getColumnModel().getColumn(2).setPreferredWidth(200);
            TableProductoJF.getColumnModel().getColumn(3).setMinWidth(20);
            TableProductoJF.getColumnModel().getColumn(3).setPreferredWidth(50);
            TableProductoJF.getColumnModel().getColumn(4).setPreferredWidth(50);
        }

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Cant");

        txtCantidadVenta.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtCantidadVenta.setText("1");
        txtCantidadVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCantidadVentaActionPerformed(evt);
            }
        });
        txtCantidadVenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCantidadVentaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantidadVentaKeyTyped(evt);
            }
        });

        txtBuscar.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscarKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarKeyTyped(evt);
            }
        });

        jLabel52.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel52.setForeground(new java.awt.Color(51, 51, 255));
        jLabel52.setText("Buscar ");

        txtcodigo.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtcodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcodigoActionPerformed(evt);
            }
        });
        txtcodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcodigoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcodigoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(jLabel52)
                        .addGap(27, 27, 27)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(123, 123, 123)
                        .addComponent(jLabel5)
                        .addGap(33, 33, 33)
                        .addComponent(txtCantidadVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(txtcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 936, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(30, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel52)
                            .addComponent(jLabel5)
                            .addComponent(txtCantidadVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(63, 63, 63))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TableProductoJFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableProductoJFMouseClicked
     
    }//GEN-LAST:event_TableProductoJFMouseClicked

    private void TableProductoJFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TableProductoJFKeyPressed


           //este codigog desactiva la accion enter por defefault
        JTable jMyTable = new JTable();
jMyTable.addKeyListener(new java.awt.event.KeyAdapter() {
     public void keyPressed(java.awt.event.KeyEvent evt) {
         TableProductoJFKeyPressed(evt);
     }
 });
        
        if(evt.getKeyCode() == evt.VK_ENTER){
         evt.consume();
         EnterBusqueda();
            //txtCodigoVenta.requestFocus();
     }

    }//GEN-LAST:event_TableProductoJFKeyPressed

    
       
    
    
    private void txtCantidadVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCantidadVentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCantidadVentaActionPerformed

    private void txtCantidadVentaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadVentaKeyPressed
        // TODO add your handling code here:
      
    }//GEN-LAST:event_txtCantidadVentaKeyPressed

    private void txtCantidadVentaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadVentaKeyTyped
        // TODO add your handling code here:
     //   event.numberKeyPress(evt);
    }//GEN-LAST:event_txtCantidadVentaKeyTyped

    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarActionPerformed

    private void txtBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyPressed
  if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
      
      TableProductoJF.requestFocus();
     
  
  }        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarKeyPressed

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
 
    // Cancelamos el timer anterior si existe, para reiniciar el temporizador
    if (timer != null) {
        timer.stop();
    }

    // Solo llamamos a listar() si el campo de texto no estÃ¡ vacÃ­o
    String textoBusqueda = txtBuscar.getText().trim();
    if (!textoBusqueda.isEmpty()) {
        // Configuramos un temporizador que ejecutarÃ¡ 'listar' despuÃ©s de 500 ms
        timer = new Timer(200, e -> listar());
        timer.setRepeats(false);  // Aseguramos que solo se ejecute una vez
        timer.start();
    }
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void txtBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyTyped

KeyboardFocusManager kb = KeyboardFocusManager.getCurrentKeyboardFocusManager();
kb.addKeyEventPostProcessor(new KeyEventPostProcessor(){
            public boolean postProcessKeyEvent(KeyEvent e){
                if (e.getKeyCode() == KeyEvent.VK_ESCAPE && this != null){
                    System.out.println("dissmise...");
                    dispose();
                    txtCodigoVenta.requestFocus();
                    return false;
                  
                    
                }
                return true;
            }
});       
     
    }//GEN-LAST:event_txtBuscarKeyTyped

    private void TableProductoJFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TableProductoJFKeyTyped

 //if(evt.getKeyCode() == evt.VK_ENTER){
   //      evt.consume();
     //}
int fila = TableProductoJF.getSelectedRow();
      if(fila == -1){
          txtBuscar.requestFocus();
     JOptionPane.showMessageDialog(null,"No se selecciono ningna fila");
        }else{
          // EnterBusqueda();      
        }            // TODO add your handling code here:
  
      
    }//GEN-LAST:event_TableProductoJFKeyTyped

    private void TableProductoJFPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_TableProductoJFPropertyChange
      // TODO add your handling code here:
    }//GEN-LAST:event_TableProductoJFPropertyChange

    private void TableProductoJFCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_TableProductoJFCaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_TableProductoJFCaretPositionChanged

    private void TableProductoJFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TableProductoJFKeyReleased
       // TODO add your handling code here:
    }//GEN-LAST:event_TableProductoJFKeyReleased

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased

              // TODO add your handling code here:
    }//GEN-LAST:event_formKeyReleased

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
       // TODO add your handling code here:
    }//GEN-LAST:event_formKeyPressed

    private void txtcodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcodigoActionPerformed

    private void txtcodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcodigoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcodigoKeyPressed

    private void txtcodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcodigoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcodigoKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmBusqueda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmBusqueda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmBusqueda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmBusqueda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmBusqueda().setVisible(true);
            }
        });
    }

  
  //suma las filas de la tabla venta
   public void TotalPagarX() {
        TotalPagar = 0.00;
        int numFila = TableVenta.getRowCount();
        for (int i = 0; i < numFila; i++) {
            double cal = Double.parseDouble(String.valueOf(TableVenta.getModel().getValueAt(i, 4)));
            
            TotalPagar = TotalPagar + cal;
        }
        lblEnviaTotal.setText(String.format("%.2f", TotalPagar));
    }
   
  
    
     public void EnterBusqueda() {
          // int  FilaSeleccionada=TableProductoJF.getSelectedRow();
         //  if(FilaSeleccionada>=0){
 
      //  DefaultTableModel modelo=(DefaultTableModel)TableVenta.getModel();
           // envia los datos de tabla venta 
          //        String Object[]=new String[5];
          
       //     Object[0]=TableProductoJF.getValueAt(FilaSeleccionada,0).toString(); //id tabla venta
       //     Object[1]=TableProductoJF.getValueAt(FilaSeleccionada,2).toString(); //Codigo
      //    Object[2]=txtCantidadVenta.getText().trim(); //cantida;
      //      Object[3]=TableProductoJF.getValueAt(FilaSeleccionada,4).toString();
     //      Object[4]=TableProductoJF.getValueAt(FilaSeleccionada,4).toString();
    //  modelo.addRow(Object);
  // TotalPagarX();
 // } 
          // this.dispose();
       
   //jTabbedPane1.setSelectedIndex(0);  
      VentanaCantidadBusqueda consulta = new VentanaCantidadBusqueda();
         int  fila=TableProductoJF.getSelectedRow();
      txtcodigo.setText(TableProductoJF.getValueAt(fila, 1).toString()); 
      consulta.sedDato(txtcodigo.getText());
       // consulta.sedDato(Integer.parseInt(txtcodigo.getText()));
        consulta.setVisible(true);
        //  int fila = TableProductoJF();
     dispose();
    
      
       } 
    public void listar() {
    DefaultTableModel modelo = new DefaultTableModel();
    Connection nuevaConexion = null;
    
    // El trim sirve para remover espacios
    String cadena = txtBuscar.getText().trim();
    
    // Preparamos la consulta SQL utilizando parÃ¡metros en lugar de concatenar el string
    String sql = "SELECT * FROM productos WHERE codigo LIKE ? OR nombre LIKE ? OR precio LIKE ?";
    
    try {
        // Usamos una conexiÃ³n ya establecida en lugar de crear una nueva cada vez
       //en linea 
        
       nuevaConexion = DriverManager.getConnection("jdbc:mysql://193.203.166.21/u722149126_tienditaaixa?useSSL=false&serverTimezone=UTC&connectTimeout=10000", "u722149126_victor", "Lolo140516");

       
       /*nuevaConexion = DriverManager.getConnection( // es localmente
    "jdbc:mysql://localhost:3306/puntedeventa-refresqueriaaixa?serverTimezone=UTC", // es localmente
  "root", "" es localmente 
);*/
       
        // Preparamos la consulta
        PreparedStatement ps = nuevaConexion.prepareStatement(sql);
        
        // Parametrizamos los valores para evitar inyecciones SQL y mejorar el rendimiento
        String searchTerm = "%" + cadena + "%";  // AÃ±adimos el '%' solo una vez
        ps.setString(1, searchTerm);
        ps.setString(2, searchTerm);
        ps.setString(3, searchTerm);
        
        // Ejecutamos la consulta
        ResultSet rs = ps.executeQuery();
        
        // Configuramos las columnas de la tabla
        modelo.setColumnIdentifiers(new Object[]{"id", "codigo", "nombre", "stock", "precio"});
        
        // Llenamos el modelo con los resultados de la consulta
        while (rs.next()) {
            modelo.addRow(new Object[]{
                rs.getString("id"),
                rs.getString("codigo"),
                rs.getString("nombre"),
                rs.getString("stock"),
                rs.getString("precio")
            });
        }
        
        // Establecemos el modelo en la tabla y configuramos el tamaÃ±o de las columnas
        TableProductoJF.setModel(modelo);
        TableProductoJF.getColumnModel().getColumn(0).setPreferredWidth(100); 
        TableProductoJF.getColumnModel().getColumn(0).setResizable(false); 
        TableProductoJF.getColumnModel().getColumn(1).setPreferredWidth(200); 
        TableProductoJF.getColumnModel().getColumn(1).setResizable(false);
        TableProductoJF.getColumnModel().getColumn(2).setPreferredWidth(600); 
        TableProductoJF.getColumnModel().getColumn(2).setResizable(false);
        
        // Ajustamos la altura de las filas
        TableProductoJF.setRowHeight(30);
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error al cargar los productos: " + e.getMessage());
    } finally {
        try {
            if (nuevaConexion != null && !nuevaConexion.isClosed()) {
                nuevaConexion.close();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}

   
       
     
       
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTable TableProductoJF;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtCantidadVenta;
    private javax.swing.JTextField txtcodigo;
    // End of variables declaration//GEN-END:variables
}
