/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Modelo.AbrirCajaEfectivo;
import Modelo.Detalle;
import Modelo.Productos;
import Modelo.ProductosDao;
import Modelo.Proveedor;
import Modelo.ProveedorDao;
import Modelo.Venta;
import Modelo.VentaDao;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel; // se llamo con el  jframe de sistemas
import Vista.Sistema;
import static Vista.Sistema.TableVenta;
import static Vista.Sistema.txtIdCV;
import static Vista.Sistema.txtIdPro;
import static Vista.Sistema.LabelVendedor; 
import static Vista.Sistema.txtCodigoVenta;
import static Vista.Sistema.lblEnviaTotal;
import Modelo.Cliente;
import Modelo.ClienteDao;
import Modelo.Combo;
import Modelo.Conexion;
import Modelo.Config;
import Modelo.Detalle;
import Modelo.Entrada;
import Modelo.EntradaDao;
import Modelo.Eventos;
import Modelo.LoginDAO;
import Modelo.Productos;
import Modelo.ProductosDao;
import Modelo.Proveedor;
import Modelo.ProveedorDao;
import Modelo.Venta;
import Modelo.VentaDao;
import Modelo.login;
import Reportes.Grafico;
import Reportes.ImprimirTicket;
import static Vista.Sistema.TableVenta;
import static Vista.ConsultaCreditoCliente.TableConsultaCreditCliente;
import static Vista.Sistema.txtCodigoVenta;
import static Vista.Sistema.txtNombreClienteventa;
import static Vista.Sistema.txtIdCV;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.table.DefaultTableModel;     
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.text.ParseException;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JRootPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.KeyStroke;

/**
 *
 * @author vic
 */
//public class ventanaCobrar extends javax.swing.JFrame {
    public final class ventanaCobrar extends javax.swing.JFrame {
  private boolean esPrimeraVez = true;
        DefaultTableModel modelo = new DefaultTableModel();
   Venta v = new Venta();
    VentaDao Vdao = new VentaDao(); 
     Detalle Dv = new Detalle();
      Proveedor pr = new Proveedor();
    ProveedorDao PrDao = new ProveedorDao();
    Productos pro = new Productos();
   
    ProductosDao proDao = new ProductosDao();
    Date fechaVenta = new Date();
    String fechaActual = new SimpleDateFormat("dd/MM/yyyy").format(fechaVenta);
    
  /**
     * Creates new form ventanaCobrar
     * @param args
     * @throws java.lang.Exception
     */
   
  DefaultTableModel tmp = new DefaultTableModel();
  int item;
 
   double TotalPagar = 0.00;
  
         double TotalPagar2 = 0.00;
    
    double TotalpagarEntrada = 0.00;
    

    public static DefaultTableModel modelo2;
   
    public ventanaCobrar() {
        initComponents();
          txtPaga.requestFocus();
        this.setLocationRelativeTo(null);
         double envia = 0.00;
     
          modelo2=new DefaultTableModel();
        modelo2.addColumn("ID");
        modelo2.addColumn("Descripcion");
        table2.setModel(modelo2);
         TotalPagarX();
      }

 /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table2 = new javax.swing.JTable();
        txtPaga = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblcambio = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        btnGenerarCobro = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Descripcion"
            }
        ));
        jScrollPane1.setViewportView(table2);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        txtPaga.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtPaga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPagaActionPerformed(evt);
            }
        });
        txtPaga.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPagaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPagaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPagaKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Paga Con:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Su cambio:");

        lblcambio.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        lblcambio.setText("0.00");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/money.png"))); // NOI18N
        jLabel10.setText("Total a Pagar:");

        lblTotal.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        lblTotal.setForeground(new java.awt.Color(0, 51, 255));
        lblTotal.setText("-----");

        btnGenerarCobro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/print.png"))); // NOI18N
        btnGenerarCobro.setText("Cobrarr");
        btnGenerarCobro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarCobroActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 51, 51));
        jButton1.setText("Cobro Con Tarjeta");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Pago Efectivo");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(212, 212, 212)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(lblcambio, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel10))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtPaga, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(297, 297, 297)
                        .addComponent(btnGenerarCobro, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(73, 73, 73)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(txtPaga, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(102, 102, 102)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblcambio, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addComponent(btnGenerarCobro, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPagaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPagaKeyReleased

    String  valor = txtPaga.getText();
        lblcambio.setText(valor);
       Operacion(); 
    
    }//GEN-LAST:event_txtPagaKeyReleased

    private void txtPagaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPagaActionPerformed
pagarenter();
 //pagarenterCreditos();// TODO add your handling code here:
    }//GEN-LAST:event_txtPagaActionPerformed

    private void btnGenerarCobroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarCobroActionPerformed
       pagarenter(); 
    }//GEN-LAST:event_btnGenerarCobroActionPerformed

    private void txtPagaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPagaKeyPressed
 if (evt.getKeyCode() == KeyEvent.VK_ENTER) {  

 }       // TODO add your handling code here:
    }//GEN-LAST:event_txtPagaKeyPressed

    private void txtPagaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPagaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPagaKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
  ventanaCobroConTarjeta cobrarConTarjeta = new ventanaCobroConTarjeta();
        cobrarConTarjeta.setVisible(true);     
        this.dispose();  // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
private void RegistrarVenta() {
    try {
        int cliente = Integer.parseInt(txtIdCV.getText());
        String vendedor = LabelVendedor.getText();
        double monto = TotalPagar;

        // Obtener fecha actual en formato dd/MM/yyyy
        Date fecha = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        String fechaActual = sdf.format(fecha);

        // Crear y llenar objeto Venta
        Venta v = new Venta();
        v.setCliente(cliente);
        v.setVendedor(vendedor);
        v.setTotal(monto);
        v.setFecha(fechaActual);

        // Registrar la venta
        Vdao.RegistrarVenta(v);
    } catch (NumberFormatException e) {
        System.out.println("Error al convertir ID del cliente: " + e.getMessage());
    } catch (ParseException e) {
        System.out.println("Error al parsear la fecha: " + e.getMessage());
    } catch (Exception e) {
        System.out.println("Error al registrar la venta: " + e.getMessage());
    }
}
    public void RegistrarDetalle() {
        int id = Vdao.IdVenta();
        for (int i = 0; i < TableVenta.getRowCount(); i++) {
            int id_pro = Integer.parseInt(TableVenta.getValueAt(i, 0).toString());
            int cant = Integer.parseInt(TableVenta.getValueAt(i, 2).toString());
            double precio = Double.parseDouble(TableVenta.getValueAt(i, 3).toString());
            Dv.setId_pro(id_pro);
            Dv.setCantidad(cant);
            Dv.setPrecio(precio);
            Dv.setId(id);
            Vdao.RegistrarDetalle(Dv);

        }
        //int cliente = Integer.parseInt(txtIdCV.getText());  //SE OMITIO POR QUE YA USAMOS LA TERMINAL SEAFOM
        //Vdao.pdfV(id, cliente, TotalPagar, LabelVendedor.getText()); //SE OMITIO POR QUE YA USAMOS LA TERMINAL SEAFOM
    }
    
    
    private void ActualizarStock() {
        for (int i = 0; i < TableVenta.getRowCount(); i++) {
            int id = Integer.parseInt(TableVenta.getValueAt(i, 0).toString());
            int cant = Integer.parseInt(TableVenta.getValueAt(i, 2).toString());
            pro = proDao.BuscarId(id);
            int StockActual = pro.getStock() - cant;
            Vdao.ActualizarStock(StockActual, id);

        }
    }
    
    //suma las filas de la tabla
   public void TotalPagarX() {
        TotalPagar = 0.00;
        int numFila = TableVenta.getRowCount();
        for (int i = 0; i < numFila; i++) {
            double cal = Double.parseDouble(String.valueOf(TableVenta.getModel().getValueAt(i, 4)));
            TotalPagar = TotalPagar + cal;
        }
        lblTotal.setText(String.format("%.2f", TotalPagar));
    }
 
    /**
     * @param args the command line arguments
     */
  
  public void pagarenter() {
    if (!"".equals(txtPaga.getText())) {
        try {
            // 1) Obtener el monto pagado por el cliente y el total de la venta
            double pago = Double.parseDouble(txtPaga.getText());
            double total = Double.parseDouble(lblTotal.getText());

            // 2) Verificar si el pago es suficiente
            if (pago < total) {
                JOptionPane.showMessageDialog(null,
                    "El monto pagado es menor al total.",
                    "Pago insuficiente",
                    JOptionPane.WARNING_MESSAGE);
                txtPaga.requestFocus();
                return;
            }

            // 3) Registrar la venta
            RegistrarVenta();      // Este método debe llenar y guardar el objeto Venta
            RegistrarDetalle();    // Registra cada línea del detalle en la tabla "detalle"
            ActualizarStock();     // Actualiza el stock en base a la venta

            // 4) Calcular el cambio
            double cambio = pago - total;

            // 5) Obtener el ID de venta recién generado
            int idVenta = Vdao.IdVenta();
           // 1) Abrir la caja registradora
      AbrirCajaEfectivo.main(null); // Llama la función para abrir la caja  

            // 6) Generar el ticket (pasa idVenta, pago y cambio)
            String ticket = ImprimirTicket.generarTicketReal(idVenta, pago, cambio);
// 7.1) Enviar a imprimir el ticket
            ImprimirTicket.imprimir(ticket);
            // 7.0) Mostrar el ticket en un diálogo modal que cierra con Enter o Esc
            mostrarTicketDialog(ticket);
            

            // 8) Limpiar interfaz
            LimpiarTableVenta();
            LimpiarCobro();
            txtCodigoVenta.requestFocus();
            this.dispose();

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null,
                "Por favor ingrese un monto válido.",
                "Error de formato",
                JOptionPane.ERROR_MESSAGE);
            txtPaga.requestFocus();
        }
    } else {
        JOptionPane.showMessageDialog(null, "Paga con $ ?");
        txtPaga.requestFocus();
    }
}

    public static void main(String args[]  ) throws ClassNotFoundException, InstantiationException, NoSuchMethodException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {
  /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ventanaCobrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ventanaCobrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ventanaCobrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ventanaCobrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ventanaCobrar().setVisible(true);
            }
        });
    }
               
  public void LimpiarCobro() {
        lblEnviaTotal.setText("");
          txtPaga.setText("");
           lblcambio.setText("");
           txtIdCV.setText("");
           txtIdPro.setText("");
    }
     public void LimpiarTxtPaga() {
         txtPaga.setText("");
     }

  private void LimpiarTableVenta() {
        tmp = (DefaultTableModel) TableVenta.getModel();
        int fila = TableVenta.getRowCount();
        for (int i = 0; i < fila; i++) {
            tmp.removeRow(0);
        }
    }
void Operacion() {
    // Obtener el texto de los campos y limpiarlo
    String totalText = lblTotal.getText().trim();
    String pagaText = txtPaga.getText().trim();

    // Si el campo está vacío, no hacer nada
    if (pagaText.isEmpty()) {
        return;
    }

    try {
        // Convertir los textos a double
        double num1 = Double.parseDouble(totalText); 
        double num2 = Double.parseDouble(pagaText);

        // Realizar la operación
        double resta = num2 - num1; 
        lblcambio.setText(String.valueOf(resta)); // Mostrar el resultado
    } catch (NumberFormatException e) {
        // Mostrar la alerta si el valor no es numérico
        JOptionPane.showMessageDialog(null, "Por favor, ingrese valores numéricos válidos.");
    }    
}
private void mostrarTicketDialog(String ticket) {
        // Crear el área de texto donde se mostrará el ticket (solo lectura)
        JTextArea area = new JTextArea(ticket);
        area.setEditable(false);
        area.setFont(new Font("Monospaced", Font.PLAIN, 30));
        area.setLineWrap(true);
        area.setWrapStyleWord(true);
        area.setCaretPosition(0);
        
        // Poner el JTextArea dentro de un JScrollPane
        JScrollPane scroll = new JScrollPane(area);
        scroll.setPreferredSize(new Dimension(800, 800)); // ajusta según tu impresora
        
        // Crear el JDialog (modal) que contendrá el JScrollPane
        final JDialog dialog = new JDialog(this, "Vista previa de ticket", true);
        dialog.getContentPane().setLayout(new BorderLayout());
        dialog.getContentPane().add(scroll, BorderLayout.CENTER);
        
        // Botón invisible para que Enter tenga foco por defecto
        JButton btnOK = new JButton("OK");
        btnOK.setVisible(false);
        dialog.getContentPane().add(btnOK, BorderLayout.SOUTH);
        dialog.getRootPane().setDefaultButton(btnOK);
        
        // Registrar key bindings: ENTER y ESC para cerrar el diálogo
        JRootPane root = dialog.getRootPane();
        InputMap im = root.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        ActionMap am = root.getActionMap();
        
        // Al presionar ENTER -> cierra
        im.put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), "ENTER");
        am.put("ENTER", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                dialog.dispose();
            }
        });
        
        // Al presionar ESC -> cierra
        im.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), "ESC");
        am.put("ESC", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                dialog.dispose();
            }
        });
        
        dialog.pack();
        dialog.setLocationRelativeTo(this);
        dialog.setVisible(true);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerarCobro;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    public static final javax.swing.JLabel lblTotal = new javax.swing.JLabel();
    private javax.swing.JLabel lblcambio;
    private javax.swing.JTable table2;
    public javax.swing.JTextField txtPaga;
    // End of variables declaration//GEN-END:variables



 

   
}
